{"tagline":"Bulk API force.com in Python","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","body":"Salesforce Bulk API Demo with Python\r\n====================================\r\n\r\nRequirement:\r\n------------\r\nThe application will demonstrate how to create, read, update and delete records in Salesforce.com in bulk using the Bulk API. \r\n\r\n###For login and logout operation, utilizing the Beatbox library from \r\n<https://github.com/superfell/Beatbox>\r\n\r\n###How to Run :\r\n    $ python crudtest.py\r\n\r\n###Video Instruction : \r\n<http://www.screencast.com/t/00cYnKLB> -- showing how to use CUD operation\r\n\r\n<http://www.screencast.com/t/oJxfheP9dv6> -- show how to do bulk query\r\n\r\n\r\nInstructions to do CRUD Operation\r\n=================================\r\n\r\n##(C)reate Operation:\r\n``` python\r\n    # initate login\r\n    obb = sfBulk();\r\n    obb.login(username, password)\r\n    # Create new job\r\n    jobinfo = sfBulkJobInfo()\r\n    # set up job operation\r\n    jobinfo.operation = \"insert\"\r\n    # set up object to operate\r\n    jobinfo._object = \"Account\"\r\n    # set up the content type for the batch data, For this version only CSV Is supported\r\n    jobinfo.contentType = \"CSV\"\r\n    # set up concurrencyMode (optional)\r\n    jobinfo.concurrencyMode = \"Parallel\"\r\n    # the actual creation of the job\r\n    obb.createJob(jobinfo)\r\n    # Create new Batch\r\n    batchIds = obb.createBatchFromCSV(jobinfo, \"insert_csv.txt\")\r\n    # close the job\r\n    obb.closeJob(jobinfo)\r\n    # logout\r\n    obb.logout()\r\n```\r\n\r\n##(U)pdate Operation:\r\n```python\r\n    obb = sfBulk();\r\n    obb.login(username, password)\r\n    jobinfo = sfBulkJobInfo()\r\n    jobinfo.operation = \"update\"\r\n    jobinfo._object = \"Account\"\r\n    jobinfo.contentType = \"CSV\"\r\n    obb.createJob(jobinfo)\r\n    batchIds = obb.createBatchFromCSV(jobinfo, \"update_csv.txt\")\r\n    obb.closeJob(jobinfo)\r\n    obb.logout()\r\n```\r\n\r\n##(D)elete Operation:\r\n```python\r\n    obb = sfBulk();\r\n    obb.login(username, password)\r\n    jobinfo = sfBulkJobInfo()\r\n    jobinfo.operation = \"delete\"\r\n    jobinfo._object = \"Account\"\r\n    jobinfo.contentType = \"CSV\"\r\n    obb.createJob(jobinfo)\r\n    batchIds = obb.createBatchFromCSV(jobinfo, \"delete_csv.txt\")\r\n    obb.closeJob(jobinfo)\r\n    obb.logout()\r\n```\r\n\r\n##(R)ead / Query Operation:\r\n```python\r\n    obb = sfBulk();\r\n    obb.login(username, password)\r\n    jobinfo = sfBulkJobInfo()\r\n    jobinfo.operation = \"query\"\r\n    jobinfo._object = \"Account\"\r\n    jobinfo.contentType = \"CSV\"\r\n    obb.createJob(jobinfo)\r\n    batchIds = obb.createBatchFromCSV(jobinfo, \"query_csv.txt\")\r\n    # you can also use SOQL directly using\r\n    # batchId  = obb.createBatch(jobInfo, \"Select id, name from Account\")\r\n    obb.closeJob(jobinfo)\r\n    obb.logout()\r\n```\r\n\r\n##Another operation included in the library:\r\n    * Ability to find batch status, Example during query\r\n```python \r\n    obb = sfBulk();\r\n    obb.login(username, password)\r\n    jobinfo = sfBulkJobInfo()\r\n    jobinfo.operation = \"query\"\r\n    jobinfo._object = \"Account\"\r\n    jobinfo.contentType = \"CSV\"\r\n    obb.createJob(jobinfo)\r\n    batchIds = obb.createBatchFromCSV(jobinfo, \"query_csv.txt\")\r\n    # wait until it finishes\r\n    while (not obb.is_jobs_completed(jobinfo)):\r\n        pprint(jobinfo.batch)\r\n        sleep(1)\r\n    \r\n    # show the result to console\r\n    pprint(\"Receiving Result from Salesforce : \\n\")\r\n    # Individually look for batch result\r\n    pprint(obb.showBatchResult(jobinfo, batchIds[0]))\r\n    \r\n    obb.closeJob(jobinfo)\r\n    obb.logout()\r\n```   \r\n    ","name":"Pybulk"}